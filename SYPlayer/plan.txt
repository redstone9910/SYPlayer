1.本地给定请求根URL:
http://www.xyuan360.com/logon.php
2.发送MD5加密文件名验证请求，正确则返回下载地址URL(exp. http://www.xyuan360.com/downloads/xxxx.mp3)
此处需要服务器端按照文件名-MD5对应列表检索出文件名，并搜索对应文件的路径。
3.开始下载

1.根据model的mp3URL判断并设定playlistItem的URL，title


if (metaData[@"StreamUrl"] && [metaData[@"StreamUrl"] length] > 0) {
//            weakSelf.stationURL = [NSURL URLWithString:metaData[@"StreamUrl"]];

//            weakSelf.navigationItem.rightBarButtonItem = weakSelf.infoButton;
}

//        [weakSelf.statusLabel setHidden:NO];
//        weakSelf.statusLabel.text = streamInfo;
weakSelf.playerConsole.statusText = streamInfo;

//        [weakSelf.stateLogger logMessageWithTimestamp:[NSString stringWithFormat:@"Meta data received: %@", streamInfo]];
};

/*
__weak SYPlayingViewController *weakSelf = self;

self.audioController.onStateChange = ^(FSAudioStreamState state) {
switch (state) {
case kFsAudioStreamRetrievingURL:
//                weakSelf.enableLogging = NO;

[UIApplication sharedApplication].networkActivityIndicatorVisible = YES;

[weakSelf showStatus:@"Retrieving URL..."];

weakSelf.playerConsole.statusText = @"";

//                weakSelf.progressSlider.enabled = NO;
//                weakSelf.playButton.hidden = YES;
//                weakSelf.pauseButton.hidden = NO;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: retrieving URL"];

break;

case kFsAudioStreamStopped:
//                weakSelf.enableLogging = NO;

[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;

weakSelf.playerConsole.statusText = @"";

//                weakSelf.progressSlider.enabled = NO;
//                weakSelf.playButton.hidden = NO;
//                weakSelf.pauseButton.hidden = YES;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: stopped"];

break;

case kFsAudioStreamBuffering: {
//                if (weakSelf.initialBuffering) {
//                    weakSelf.enableLogging = NO;
//                    weakSelf.initialBuffering = NO;
//                } else {
//                    weakSelf.enableLogging = YES;
//                }

NSString *bufferingStatus = nil;
if (weakSelf.configuration.usePrebufferSizeCalculationInSeconds) {
bufferingStatus = [[NSString alloc] initWithFormat:@"Buffering %f seconds...", weakSelf.audioController.activeStream.configuration.requiredPrebufferSizeInSeconds];
} else {
bufferingStatus = [[NSString alloc] initWithFormat:@"Buffering %i bytes...", (weakSelf.audioController.activeStream.continuous ? weakSelf.configuration.requiredInitialPrebufferedByteCountForContinuousStream :
weakSelf.configuration.requiredInitialPrebufferedByteCountForNonContinuousStream)];
}

[weakSelf showStatus:bufferingStatus];

[UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
//                weakSelf.progressSlider.enabled = NO;
//                weakSelf.playButton.hidden = YES;
//                weakSelf.pauseButton.hidden = NO;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: buffering"];

break;
}

case kFsAudioStreamSeeking:
//                weakSelf.enableLogging = NO;

[weakSelf showStatus:@"Seeking..."];

[UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
//                weakSelf.progressSlider.enabled = NO;
//                weakSelf.playButton.hidden = YES;
//                weakSelf.pauseButton.hidden = NO;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: seeking"];

break;

case kFsAudioStreamPlaying:
//                weakSelf.enableLogging = YES;

#if DO_STATKEEPING
NSLog(@"%@", weakSelf.audioController.activeStream);
#endif

[weakSelf determineStationNameWithMetaData:nil];

[weakSelf clearStatus];

[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;

//                weakSelf.progressSlider.enabled = YES;

if (!weakSelf.progressUpdateTimer) {
weakSelf.progressUpdateTimer = [NSTimer scheduledTimerWithTimeInterval:0.5
target:weakSelf
selector:@selector(updatePlaybackProgress)
userInfo:nil
repeats:YES];
}

if (weakSelf.volumeBeforeRamping > 0) {
// If we have volume before ramping set, it means we were seeked

#if PAUSE_AFTER_SEEKING
[weakSelf pause:weakSelf];
weakSelf.audioController.volume = weakSelf.volumeBeforeRamping;
weakSelf.volumeBeforeRamping = 0;

break;
#else
weakSelf.rampStep = 1;
weakSelf.rampStepCount = 5; // 50ms and 5 steps = 250ms ramp
weakSelf.rampUp = true;
weakSelf.postRampAction = @selector(finalizeSeeking);

weakSelf.volumeRampTimer = [NSTimer scheduledTimerWithTimeInterval:0.05 // 50ms
target:weakSelf
selector:@selector(rampVolume)
userInfo:nil
repeats:YES];
#endif
}
[weakSelf toggleNextPreviousButtons];
//                weakSelf.playButton.hidden = YES;
//                weakSelf.pauseButton.hidden = NO;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: playing"];

break;

case kFsAudioStreamFailed:
//                weakSelf.enableLogging = YES;

[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
//                weakSelf.progressSlider.enabled = NO;
//                weakSelf.playButton.hidden = NO;
//                weakSelf.pauseButton.hidden = YES;
//                weakSelf.paused = NO;
weakSelf.playerConsole.playing = YES;

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: failed"];

break;
case kFsAudioStreamPlaybackCompleted:
//                weakSelf.enableLogging = NO;

[weakSelf toggleNextPreviousButtons];

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: playback completed"];

break;

case kFsAudioStreamRetryingStarted:
//                weakSelf.enableLogging = YES;

[weakSelf showStatus:@"Attempt to retry playback..."];

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: retrying started"];

break;

case kFsAudioStreamRetryingSucceeded:
//                weakSelf.enableLogging = YES;
//
//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: retrying succeeded"];

break;

case kFsAudioStreamRetryingFailed:
//                weakSelf.enableLogging = YES;

[weakSelf showErrorStatus:@"Failed to retry playback"];

//                [weakSelf.stateLogger logMessageWithTimestamp:@"State change: retrying failed"];

break;

default:
break;
}
};

self.audioController.onFailure = ^(FSAudioStreamError error, NSString *errorDescription) {
NSString *errorCategory;

switch (error) {
case kFsAudioStreamErrorOpen:
errorCategory = @"Cannot open the audio stream: ";
break;
case kFsAudioStreamErrorStreamParse:
errorCategory = @"Cannot read the audio stream: ";
break;
case kFsAudioStreamErrorNetwork:
errorCategory = @"Network failed: cannot play the audio stream: ";
break;
case kFsAudioStreamErrorUnsupportedFormat:
errorCategory = @"Unsupported format: ";
break;
case kFsAudioStreamErrorStreamBouncing:
errorCategory = @"Network failed: cannot get enough data to play: ";
break;
default:
errorCategory = @"Unknown error occurred: ";
break;
}

NSString *formattedError = [NSString stringWithFormat:@"%@ %@", errorCategory, errorDescription];

[weakSelf.stateLogger logMessageWithTimestamp:[NSString stringWithFormat:@"Audio stream failure: %@", formattedError]];

[weakSelf showErrorStatus:formattedError];
};

self.audioController.onMetaDataAvailable = ^(NSDictionary *metaData) {
NSMutableString *streamInfo = [[NSMutableString alloc] init];

[weakSelf determineStationNameWithMetaData:metaData];

NSMutableDictionary *songInfo = [[NSMutableDictionary alloc] init];

if (metaData[@"MPMediaItemPropertyTitle"]) {
songInfo[MPMediaItemPropertyTitle] = metaData[@"MPMediaItemPropertyTitle"];
} else if (metaData[@"StreamTitle"]) {
songInfo[MPMediaItemPropertyTitle] = metaData[@"StreamTitle"];
}

if (metaData[@"MPMediaItemPropertyArtist"]) {
songInfo[MPMediaItemPropertyArtist] = metaData[@"MPMediaItemPropertyArtist"];
}

[[MPNowPlayingInfoCenter defaultCenter] setNowPlayingInfo:songInfo];

if (metaData[@"MPMediaItemPropertyArtist"] &&
metaData[@"MPMediaItemPropertyTitle"]) {
[streamInfo appendString:metaData[@"MPMediaItemPropertyArtist"]];
[streamInfo appendString:@" - "];
[streamInfo appendString:metaData[@"MPMediaItemPropertyTitle"]];
} else if (metaData[@"StreamTitle"]) {
[streamInfo appendString:metaData[@"StreamTitle"]];
}

if (metaData[@"StreamUrl"] && [metaData[@"StreamUrl"] length] > 0) {
weakSelf.stationURL = [NSURL URLWithString:metaData[@"StreamUrl"]];

weakSelf.navigationItem.rightBarButtonItem = weakSelf.infoButton;
}

[weakSelf.statusLabel setHidden:NO];
weakSelf.playerConsole.statusText = streamInfo;

[weakSelf.stateLogger logMessageWithTimestamp:[NSString stringWithFormat:@"Meta data received: %@", streamInfo]];
};
*/

//    NSMutableArray *playListItemArray = [[NSMutableArray alloc] init];
//    for (SYSongModel *model in self.songModelArrary) {
//        FSPlaylistItem *item = [[FSPlaylistItem alloc] init];
//
//        item.title = model.songName;
//        NSString *urlStr = [model.mp3URL stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
//        if ([urlStr hasPrefix:@"/"]) {
//            urlStr = [@"file://" stringByAppendingPathComponent:urlStr];
//        }
//        NSURL *url = [NSURL URLWithString:urlStr];
//        item.url = url;
//        [playListItemArray addObject:item];
//    }
//    [self.audioController playFromPlaylist:[playListItemArray copy]];


139.129.13.56

scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第1册）美音（MP3.LRC）/NCE1-美音-\(MP3+LRC\) root@139.129.13.56:/var/www/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第2册）美音（MP3+LRC）/NCE2-美音-\(MP3+LRC\) root@139.129.13.56:/var/www/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第3册）美音（MP3+LRC）/NCE3-美音-\(MP3+LRC\) root@139.129.13.56:/var/www/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第4册）美音（MP3+LRC）/NCE4-美音-\(MP3+LRC\) root@139.129.13.56:/var/www/download
scp /Library/WebServer/Documents/login1.php root@139.129.13.56:/var/www

104.247.221.116
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第1册）美音（MP3.LRC）/NCE1-美音-\(MP3+LRC\) root@104.247.221.116:/www/web/default/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第2册）美音（MP3+LRC）/NCE2-美音-\(MP3+LRC\) root@104.247.221.116:/www/web/default/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第3册）美音（MP3+LRC）/NCE3-美音-\(MP3+LRC\) root@104.247.221.116:/www/web/default/download
scp -r /Volumes/DATA/Download/新概念英语mp3+lrc+4册全/新概念英语（第4册）美音（MP3+LRC）/NCE4-美音-\(MP3+LRC\) root@104.247.221.116:/www/web/default/download
scp /Library/WebServer/Documents/login1.php root@104.247.221.116:/www/web/default
Guanli2011







<?php
class itcastUsers {
private $db;

// 构造函数-建立数据库链接
function __construct() {
$this->db = new mysqli('localhost', 'root', 'Guanli2011', 'itcast');

if (mysqli_connect_errno()){
printf("连接错误:%s\n", mysqli_connect_error());
exit();
}

$this->db->autocommit(FALSE);
}

// 析构函数-关闭数据库连接
function __destruct() {
$this->db->close();
}

// 用户登录
function userLogin() {
if (isset($_GET['username']) && isset($_GET['password']) && isset($_GET['filename'])){
// 获取GET请求参数
$accessType = '[GET]';
$userName = $_GET['username'];
$userPassword = $_GET['password'];
$filename = $_GET['filename'];
} else if (isset($_POST['username']) && isset($_POST['password']) && isset($_POST['filename'])){
// 获取POST请求参数
$accessType = '[POST]';
$userName = $_POST['username'];
$userPassword = $_POST['password'];
$filename = $_POST['filename'];
} else {
echo('非法请求!');
return false;
}

// 设置数据库查询字符编码
$this->db->query('set names utf8');
// 查询请求
$data = $this->db->query("SELECT id, userName FROM userInfo WHERE userName='$userName' AND userPwd='$userPassword'");
// 绑定查询参数
$this->db->real_escape_string($userName);
$this->db->real_escape_string($userPassword);
// 提交查询请求
$this->db->commit();
// 提取一条查询结果
$row = $data->fetch_assoc();

$filePath = "";
if(isset($row['id']))
{
$targetdir = "./download";

$dir=dir($targetdir);
if ($dir) {
//rename usage
// $entry=$dir->read();
// echo $entry;
// while($entry=$dir->read())
// {
//     if($entry == "." || $entry == "..") continue;

//     if(strstr($entry,$filename) && strstr($entry,"mp3"))
//     {
//         $filePath = $targetdir."/".$entry;
//         break;
//     }

// }
$filePath = $this->searchFileFromDir($targetdir,$filename);
if ($filePath == "") {
echo "file \"$filename\" not found... <br />";
return FALSE;
}
}else{
echo "dir not found...<br />";
return FALSE;
}
}

// echo "file \"$filename\" found in $filePath!<br />";
// 将结果绑定到数据字典
// $result = [
// 'userId' => $row['id'],
// 'userName' => $row['userName'],
// 'filePath' => $filePath,
// ];
$result = array(
'userId' => $row['id'],
'userName' => $row['userName'],
'filePath' => $filePath,
);

// 将数据字典使用JSON编码
echo json_encode($result);
return true;
}

function searchFileFromDir($dir,$fileName)
{
// echo "searching \"$fileName\" in \"$dir\"<br />";
if (!is_dir($dir)) {
// echo "Not dir<br />";
return false;
}
//打开目录
$handle = opendir($dir);
while (($file = readdir($handle)) !== false) {
//排除掉当前目录和上一个目录
if ($file == "." || $file == "..") {
continue;
}
$tempDir = $dir . DIRECTORY_SEPARATOR . $file;
//如果是文件就打印出来，否则递归调用
// if (is_file($file)) {
// print $file . '<br />';
if(strstr($file,$fileName) && strstr($file,"mp3")){
// echo "File found in $tempDir!<br />";
return $tempDir;
} elseif (is_dir($tempDir)) {
// echo "Next dir:$tempDir<br />";
$nextDir =  $this->searchFileFromDir($tempDir,$fileName);
if($nextDir) {
return $nextDir;
}
}
}
// echo "Search failed in $dir<br />";

return false;
}
}

header('Content-Type:text/html;charset=utf-8');
$itcast = new itcastUsers;
$itcast->userLogin();

//Guanli2011
?>



发件人 Apple

2.2 - Apps that exhibit bugs will be rejected

2.2 Details

We discovered one or more bugs in your app when reviewed on both Wi-Fi and cellular networks.

Specifically, we noticed that a 下载失败 message is displayed when users tap on any 下载 buttons.

Please see the attached screenshot for more information.

Next Steps

Please run your app on a device to identify the issue(s), then revise and resubmit your app for review.

If we misunderstood the intended behavior of your app, please reply to this message in the Resolution Center to provide information on how these features were intended to work.

For new apps, uninstall all previous versions of your app from a device, then install and follow the steps to reproduce the issue(s). For updates, install the new version as an update to the previous version, then follow the steps to reproduce the issue(s).

Resources
If you have difficulty reproducing a reported issue, please try testing the workflow described in Technical Q&A QA1764: How to reproduce bugs reported against App Store submissions.

If you have code-level questions after utilizing the above resources, you may wish to consult with Apple Developer Technical Support. When the DTS engineer follows up with you, please be ready to provide:
- complete details of your rejection issue(s)
- screenshots
- steps to reproduce the issue(s)
- symbolicated crash logs - if your issue results in a crash log

abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzD
abcdefghijklmnopqrstuvwxyz,.
abcdefghijklmnopqrstuvwxyz,.ABCDEFGHIJKLMNOPQRSTUVWXYZ<>[]{}
abcdefghijklmnopqrstuvwxyz,.ABCDEFGHIJKLMNOPQRSTUVWXYZ<>?[]{}1234567890
abcdefghijklmnopqrstuvwxyz,./,./[]{}1234567889890!@#$%&*()_
abcdefghijklmnopqrstuvwxyz,./[]{}12345712345677890)(*&^!@#$%)
abcdefghijklmnopqrstuvwxyz,./{}[]12345678890-=+
abcdefghijklmnopqrstuvwxyzAAbCDEFGHIJKLMNOPQRSTUVWXYZ
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ./,l;:'"{}[]qw124313;'';']\[]0-=-
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,./l;'"'[]{}1234567890!@#$%&*()_^&*()`~`'
abcdefgjijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:,./<>?{}[]'
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:,<.>/?[]{}=+-_0)9(qweasd1231234567890!@#$%^&*()-=_+\|
abcdefghijklmnopqrstyvsxtzuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:,./<>?{}{}{}_+-=-=1234567890!@#$%^&*())_+_
avcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:;:,./<>/?[]{}123456789013884636373
4$$$$$\
rstuvwxyzABCDDEFGHIJKLMNOPQRSTUVWXYZZ;:,.?/<>p[[]]{}!@#124abcdefghijklmnopqopqrstuvwxyzghybghbyABCDEFGHIJKLMNOPQRSTUVWXYZ;:[],../<>/abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:./,.,.,.,.,.,,.//???1234578991234567890-=0-)_)(EEEEEEE()__-=+ \
AbcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:m,,./<>?[]{}-=_+
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:,.,./?[]{}.......
zyxwvuqpotsrqponmlabcdefghijklmnopqrstuvwxyzABCEDFGHIJKLMNOPQRSTUVWXYZ;
,../][]\
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;1234571234567890-=)+()=-_=-=__+
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;123456788890909090909!@#@#$%$%&^&^&**(*)__+=00)-=
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"";;'",."
abcdefghIjklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?[]{}\"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?p[p[]"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?<>[]{}"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?<>"[]{}|\
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?<>[][]{}"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@",./<>?[]{
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./<>?[]{}"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./<>?[]{}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./?<>[]\|-_+"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@",./<>?"[]"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@",./<>?"[]"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@"":[],.?//////"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"#$%d">?
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"#$%d"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@""
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"#$%d
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",./<>?[]{}"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@!#$%^^&*&&&*(_)_&^&*()_)
abcdefghijklmnopqrstuvwsyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@!#$%%^&*()_+00-=abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@,./?[]{}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;:@"",.<>/[]{}"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;
""@"!@#$%&^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@"!@#$%^!@#$%^!@#$%%^^&*()
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@""!@#$%!@#$%^&*()_+--=
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@"",./?[]{}_+1234567890!@#$%^&*()
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ;@:""m,,./"
abcdefghigklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
18801283927
118618405005666






'
